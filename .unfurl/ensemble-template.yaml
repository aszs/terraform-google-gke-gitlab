apiVersion: unfurl/v1alpha1
kind: Ensemble
spec:
  service_template:
    topology_template:
      inputs:
        project_id:
          type: string
        certmanager_email:
          type: string
        domain:
          type: string
      node_templates:
        gitlab:
          # this will create google project
          type: unfurl.nodes.Installer.Terraform
          interfaces:
            defaults:
              inputs:
                resultTemplate: |
                  # merge all outputs into attributes
                  attributes:
                    <<: "{{ outputs | mapValue | to_json }}"
                main:
                  eval:
                    # terraform module expects a source to be a relative path
                    template: >
                      module "gke-gitlab" {
                        source  = "../.."
                        project_id         = "{{ {get_input: project_id} }}"
                        certmanager_email  = "{{ {get_input: certmanager_email} }}"
                        domain = "{{ {get_input: domain} }}"
                      }

                      output "gitlab_url" {
                        value = "${module.gke-gitlab.gitlab_url}"
                      }

                      output "root_password_instructions" {
                        value = "${module.gke-gitlab.root_password_instructions}"
                      }

                      output "gitlab_address" {
                        value       = "${module.gke-gitlab.gitlab_address}"
                        description = "IP address where you can connect to your GitLab instance"
                      }

                      output "cluster_name" {
                        value       = "${module.gke-gitlab.cluster_name}"
                        description = "Name of the GKE cluster that GitLab is deployed in."
                      }

                      output "cluster_location" {
                        value       = "${module.gke-gitlab.cluster_location}"
                        description = "Location of the GKE cluster that GitLab is deployed in."
                      }

                      output "cluster_ca_certificate" {
                        value       = "${module.gke-gitlab.cluster_ca_certificate}"
                        description = "CA Certificate for the GKE cluster that GitLab is deployed in."
                        sensitive = true
                      }

                      output "host" {
                        value       = "${module.gke-gitlab.host}"
                        description = "Host for the GKE cluster that GitLab is deployed in."
                      }

                      output "token" {
                        value       = "${module.gke-gitlab.token}"
                        description = "Token for the GKE cluster that GitLab is deployed in."
                        sensitive = true
                      }
                  vars:
                    module_path:
                      eval:
                        get_dir: "terraform-google-gke-gitlab"
